[{"C:\\Users\\A\\covid-front-end\\src\\index.js":"1","C:\\Users\\A\\covid-front-end\\src\\App.js":"2","C:\\Users\\A\\covid-front-end\\src\\reportWebVitals.js":"3","C:\\Users\\A\\covid-front-end\\src\\statistics.js":"4","C:\\Users\\A\\covid-front-end\\src\\Statistics.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":188,"mtime":1612262842980,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":1001,"mtime":1612251984172,"results":"10","hashOfConfig":"7"},{"size":2480,"mtime":1612262692192,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"8xht4m",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Users\\A\\covid-front-end\\src\\index.js",[],["24","25"],"C:\\Users\\A\\covid-front-end\\src\\App.js",[],"C:\\Users\\A\\covid-front-end\\src\\reportWebVitals.js",[],"C:\\Users\\A\\covid-front-end\\src\\statistics.js",[],"C:\\Users\\A\\covid-front-end\\src\\Statistics.js",["26","27"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { CountryDropdown } from 'react-country-region-selector';\r\nclass Statistics extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    data: {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          backgroundColor: 'rgba(75,192,192,0.4)',\r\n          label: 'Cases',\r\n          data: []\r\n        },\r\n        {\r\n          backgroundColor: 'rgba(255,84,71,0.9)',\r\n          label: 'Deaths',\r\n          data: []\r\n        }\r\n      ]\r\n    },\r\n    country:\"Lithuania\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCovidData(this.state.country);\r\n  }\r\n    getCovidData(val){\r\n      console.log(val);\r\n      axios.get(`http://localhost:8080/api/`+val).then((res) => {\r\n        const cases = {};\r\n        const deaths = {};\r\n  \r\n        res.data.map((record) => {\r\n          if (record.indicator === 'cases') cases[record.year_week] = record.cumulative_count;\r\n          else if (record.indicator === 'deaths') deaths[record.year_week] = record.cumulative_count;\r\n        });\r\n  \r\n        const weeks = [];\r\n        const deathsArray = [];\r\n        const casesArray = [];\r\n        Object.keys(cases).forEach((year_week) => {\r\n          weeks.push(year_week);\r\n          casesArray.push(cases[year_week]);\r\n          deathsArray.push(deaths[year_week]);\r\n        });\r\n  \r\n        const newData = {\r\n          labels: [ ...weeks ],\r\n          datasets: [\r\n            {\r\n              backgroundColor: 'rgba(75,192,192,0.4)',\r\n              label: 'Cases',\r\n              data: [ ...casesArray ]\r\n            },\r\n            {\r\n              backgroundColor: 'rgba(255,84,71,0.9)',\r\n              label: 'Deaths',\r\n              data: [ ...deathsArray ]\r\n            }\r\n          ]\r\n        };\r\n        this.setState({ data: { ...newData } });\r\n        // console.log(deathsArray);\r\n        // console.log(weeks);\r\n        // console.log(casesArray);\r\n      });\r\n    }\r\n\r\n\r\n     changeHandler = value => {\r\n       this.setState({\r\n         country: value\r\n       })\r\n      this.getCovidData(value)\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Covid Tracker</h1>\r\n        <CountryDropdown\r\n          value={this.state.country}\r\n          onChange={(val) => this.changeHandler(val)} />\r\n        <Line data={this.state.data} options={{}} width={100} height={40} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistics;\r\n",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":6,"column":3,"nodeType":"34","messageId":"35","endLine":8,"endColumn":4},{"ruleId":"36","severity":1,"message":"37","line":37,"column":31,"nodeType":"38","messageId":"39","endLine":37,"endColumn":33},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]